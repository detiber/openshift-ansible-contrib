AWSTemplateFormatVersion: '2010-09-09'
Description: OpenShift Security Groups Template
Parameters:
  VPC:
    Type: "AWS::EC2::VPC::Id"
  MasterAPIPort:
    Type: Number

Resources:
  MasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Masters'
      VpcId: !Ref VPC
  MasterExternalELBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Masters External Load-Balancer'
      VpcId: !Ref VPC
  MasterInternalELBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Masters Internal Load-Balancer'
      VpcId: !Ref VPC
  NodeSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Nodes'
      VpcId: !Ref VPC
  ETCDSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift etcd Hosts'
      VpcId: !Ref VPC
  RouterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Routers'
      VpcId: !Ref VPC
  RouterELBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'OpenShift Routers Load-Balancer'
      VpcId: !Ref VPC
  SSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'SSH Access'
      VpcId: !Ref VPC

  SSHSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: !Ref SSHSecurityGroup
    Properties:
      GroupId:    !Ref SSHSecurityGroup
      CidrIp:     0.0.0.0/0
      ToPort:     22
      FromPort:   22
      IpProtocol: tcp

  MasterExternalELBSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: !Ref MasterExternalELBSecurityGroup
    Properties:
      GroupId:    !Ref MasterExternalELBSecurityGroup
      CidrIp:     0.0.0.0/0
      ToPort:     !Ref MasterAPIPort
      FromPort:   !Ref MasterAPIPort
      IpProtocol: tcp

  RouterELBSecurityGroupHTTPIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: !Ref RouterELBSecurityGroup
    Properties:
      GroupId:    !Ref RouterELBSecurityGroup
      CidrIp:     0.0.0.0/0
      ToPort:     80
      FromPort:   80
      IpProtocol: tcp
  RouterELBSecurityGroupHTTPsIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: !Ref RouterELBSecurityGroup
    Properties:
      GroupId:    !Ref RouterELBSecurityGroup
      CidrIp:     0.0.0.0/0
      ToPort:     443
      FromPort:   443
      IpProtocol: tcp

  ETCDSecurityGroupMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref ETCDSecurityGroup
      - !Ref MasterSecurityGroup
    Properties:
      GroupId:               !Ref ETCDSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      ToPort:                2379
      FromPort:              2379
      IpProtocol:            tcp
  ETCDSecurityGroupETCDIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref ETCDSecurityGroup
    Properties:
      GroupId:               !Ref ETCDSecurityGroup
      SourceSecurityGroupId: !Ref ETCDSecurityGroup
      ToPort:                2380
      FromPort:              2379
      IpProtocol:            tcp

  NodeSecurityGroupMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref NodeSecurityGroup
      - !Ref MasterSecurityGroup
    Properties:
      GroupId:               !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      ToPort:                10250
      FromPort:              10250
      IpProtocol:            tcp
  NodeSecurityGroupKubeletIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref NodeSecurityGroup
    Properties:
      GroupId:               !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort:                10250
      FromPort:              10250
      IpProtocol:            tcp
  NodeSecurityGroupVXLANIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref NodeSecurityGroup
    Properties:
      GroupId:               !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort:                4789
      FromPort:              4789
      IpProtocol:            udp

  MasterSecurityGroupMasterAPIIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterSecurityGroup
    Properties:
      GroupId:               !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp
  MasterSecurityGroupNodeIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterSecurityGroup
      - !Ref NodeSecurityGroup
    Properties:
      GroupId:               !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp
  MasterSecurityGroupMasterInternalELBIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterSecurityGroup
      - !Ref MasterInternalELBSecurityGroup
    Properties:
      GroupId:               !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref MasterInternalELBSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp
  MasterSecurityGroupMasterExternalELBIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterSecurityGroup
      - !Ref MasterExternalELBSecurityGroup
    Properties:
      GroupId:               !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref MasterExternalELBSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp

  MasterInternalELBSecurityGroupMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterInternalELBSecurityGroup
      - !Ref MasterSecurityGroup
    Properties:
      GroupId:               !Ref MasterInternalELBSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp
  MasterInternalELBSecurityGroupNodeIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref MasterInternalELBSecurityGroup
      - !Ref NodeSecurityGroup
    Properties:
      GroupId:               !Ref MasterInternalELBSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort:                !Ref MasterAPIPort
      FromPort:              !Ref MasterAPIPort
      IpProtocol:            tcp

  RouterSecurityGroupHTTPIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref RouterSecurityGroup
      - !Ref RouterELBSecurityGroup
    Properties:
      GroupId:               !Ref RouterSecurityGroup
      SourceSecurityGroupId: !Ref RouterELBSecurityGroup
      ToPort:                80
      FromPort:              80
      IpProtocol:            tcp
  RouterSecurityGroupHTTPSIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn:
      - !Ref RouterSecurityGroup
      - !Ref RouterELBSecurityGroup
    Properties:
      GroupId:               !Ref RouterSecurityGroup
      SourceSecurityGroupId: !Ref RouterELBSecurityGroup
      ToPort:                443
      FromPort:              443
      IpProtocol:            tcp

  MasterExternalELBSecurityGroupEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    DependsOn: !Ref MasterExternalELBSecurityGroup
    Properties:
      GroupId:                    !Ref MasterExternalELBSecurityGroup
      DestinationSecurityGroupId: !Ref MasterExternalELBSecurityGroup
      ToPort:                     !Ref MasterAPIPort
      FromPort:                   !Ref MasterAPIPort
      IpProtocol:                 tcp

  RouterELBSecurityGroupHTTPEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    DependsOn: !Ref RouterELBSecurityGroup
    Properties:
      GroupId:                    !Ref RouterELBSecurityGroup
      DestinationSecurityGroupId: !Ref RouterELBSecurityGroup
      ToPort:                     80
      FromPort:                   80
      IpProtocol:                 tcp
  RouterELBSecurityGroupHTTPSEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    DependsOn: !Ref RouterELBSecurityGroup
    Properties:
      GroupId:                    !Ref RouterELBSecurityGroup
      DestinationSecurityGroupId: !Ref RouterELBSecurityGroup
      ToPort:                     443
      FromPort:                   443
      IpProtocol:                 tcp

  MasterInternalELBSecurityGroupMasterEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    DependsOn:
      - !Ref MasterExternalELBSecurityGroup
      - !Ref MasterSecurityGroup
    Properties:
      GroupId:                    !Ref MasterExternalELBSecurityGroup
      DestinationSecurityGroupId: !Ref MasterSecurityGroup
      ToPort:                     !Ref MasterAPIPort
      FromPort:                   !Ref MasterAPIPort
      IpProtocol:                 tcp

Outputs:
  MasterSecurityGroups:
    Value:
      - !Ref MasterSecurityGroup
      - !Ref NodeSecurityGroup
      - !Ref ETCDSecurityGroup
      - !Ref SSHSecurityGroup
  NodeSecurityGroups:
    Value:
      - !Ref NodeSecurityGroup
      - !Ref SSHSecurityGroup
  ETCDSecurityGroups:
    Value:
      - !Ref ETCDSecurityGroup
      - !Ref SSHSecurityGroup
  RouterSecurityGroups:
    Value:
      - !Ref RouterSecurityGroup
      - !Ref NodeSecurityGroup
      - !Ref SSHSecurityGroup
  RouterELBSecurityGroups:
    Value:
      - !Ref RouterELBSecurityGroup
  MasterExternalELBSecurityGroups:
    Value:
      - !Ref MasterExternalELBSecurityGroup
  MasterInternalELBSecurityGroups:
    Value:
      - !Ref MasterInternalELBSecurityGroup